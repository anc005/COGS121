<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link rel="stylesheet" type="text/css" href="/CSS/dd.css" />
	<link rel="stylesheet" type="text/css" href="/CSS/map.css">
    <link rel="stylesheet" type="text/css" href="/CSS/login_signup.css">

    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="/js/jquery.js"></script>
    <script src="/js/require.js"></script>
    <script type="text/javascript" src="//code.jquery.com/jquery-1.4.2.js"></script>

    <script src="/js/jquery-1.3.2.min.js" type="text/javascript"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
	<title>Map View</title>
</head>

<body>
  <ul id="navbar">
    <li><a id="mc" href="/"><b>MapChat</b></a></li>
	<a href="javascript:logout()" class="logout"><i class="fa fa-power-off" aria-hidden="true"></i></a>
  </ul>

   <main>

   <tab-section id="lost-tab-section" class="active">
   		<div id="map-outer">
        	<img id="map-loading" src="img/loading.svg" />
            <div id="map"></div>
   		</div>
   </tab-section>

   <tab-section id="found-tab-section">
   	   <form id="found-form">
<!--             <h2>Create Post</h2>
 -->            <label>Mood: </label>
            <br>
              <label>
                <input id="sad" type="radio" name="webmenu" onclick="getName(this.id)" value="med" />
                <img src="icons/sad.png">
              </label>

              <label>
                <input id="sinister" type="radio" name="webmenu" value="med" onclick="getName(this.id)"/>
                <img src="icons/sinister.png">
              </label>

              <label>
                <input id="funny" type="radio" name="webmenu" value="med" onclick="getName(this.id)"/>
                <img src="icons/funny.png">
              </label>

              <label>
                <input id="meh" type="radio" name="webmenu" value="med" onclick="getName(this.id)"/>
                <img src="icons/meh.png">
              </label>
              <label>
                <input id="angry" type="radio" name="webmenu" value="med" onclick="getName(this.id)"/>
                <img src="icons/angry.png">
              </label>
<!--             <select name="webmenu" id="webmenu">
			         <option id="emojoSelect" value="calendar" data-image="icons/sad.png">Sad</option>
  			     </select> -->
             <br><br>
            <label>Status: </label>
            <textarea id="found-description" placeholder="How are you feeling?"></textarea>
            <button class="addValue" type="submit">POST</button>
       </form>
   </tab-section>


   <tab-section id="profile-tab-section">
      <form id="found-form" onsubmit="addJSON();" action="/">

        <div class="profileContainer">
          <label><b>First Name</b></label><br>
          <input type="text" id="fname" required>
          <br><br>
          <label><b>Last Name</b></label><br>
          <input type="text" id="lname" required>
          <br><br>
          <label><b>Email</b></label><br>
          <input type="text" id="email" required>
          <br><br>
          <label><b>Occupation</b></label><br>
          <input type="text" id="occupation" required>
          <br><br>
          <label><b>Hobbies</b></label><br>
          <input type="text" id="hobby" required>
          <br><br>
<!--           <label><b>Gender</b></label><br>
 -->         <!--  <input type="radio" id="gender" value="male"> Male<br>
          <input type="radio" id="gender" value="female"> Female<br>
          <input type="radio" id="gender" value="other"> Prefer not to say -->
      <!--     <br><br> -->

        </div>
        <button type="submit">Save Changes</button>

      </form>
      <br><br><br><br>

    </tab-section>

	<tab-section id="post-tab-section">
	  <a id="username" style="position:absolute; left:5%; top:15%">Name: No Post Selected.</a>
	  <a id="postDesc" style="position:absolute; left:5%; top:20%">Description: No Post Selected.</a>
	  <a id="postTime" style="position:absolute; left:5%; top:25%">Time: No Post Selected.</a>
      <ul id="commentList" style="position:fixed; height:70%; width:50%; left:25%; overflow: auto">
	    <li><a>Welcome to MapChat!</a></li>
		<li><a>Please select a post from the Map!</a></li>
	  </ul>
	  <form id="commentBox" action="javascript:addComment(inText.value)" >
        <input type="text" id="inText" required>
        <input type="submit" value="Comment" id="commentSubmission">
      </form>
	</tab-section>

  </main>
  <footer class="btn-group" id="footer">
            <tab id="lost-tab" class="active">Map</tab>
		    <tab id="post-tab">Chat</tab>
            <tab id="found-tab">Create Post</tab>
            <tab id="profile-tab">Edit Profile</tab>
  </footer>

<script src="https://www.gstatic.com/firebasejs/4.0.0/firebase.js"></script>
<script>
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyCBhEOwCcoCumMv4rem4VvcymsJajE3kgI",
    authDomain: "peeradvisor-165319.firebaseapp.com",
    databaseURL: "https://peeradvisor-165319.firebaseio.com",
    projectId: "peeradvisor-165319",
    storageBucket: "peeradvisor-165319.appspot.com",
    messagingSenderId: "1073760765111"
  };
  firebase.initializeApp(config);

  // Get a reference to the database service
  var database = firebase.database();
  const dbRefPosts = database.ref().child("posts");
  var nextPostId;
  var dbRefCount = database.ref('nextId' + '/posts');
  //database.ref().child("posts").remove(); //cleared the posts to better test
  dbRefCount.on('value', snapshot => {
    nextPostId = snapshot.val();
  });

  //On page load, check if a user is logged in
  if (sessionStorage.user) {
    console.log(sessionStorage.user);
  }
  else {
    alert("Error: Must login to access this page.");
    window.location.href="/login";
  }

  //On page load, set postSelect to null
  sessionStorage.removeItem("postSelect");

  //Logout function
  function logout() {
    sessionStorage.removeItem("user");
	sessionStorage.removeItem("postSelect");
    firebase.auth().signOut();
    window.location.href = "/login";
  }

  function postComments(userkey) {
	console.log("Post Comments: " + userkey);
	database.ref('users/' + sessionStorage.postSelect + '/postComments').off();
    //Clear data from post comments page
	while (commentList.hasChildNodes()) {
	  commentList.removeChild(commentList.firstChild);
	}
	
	if (typeof(Storage) !== "undefined") {
	  window.sessionStorage.setItem("postSelect", userkey);
	}
	else {
	  Alert("This web application's features is not supported on your browser");
	}
	//Display post metadata
	database.ref('users/' + userkey + '/').once('value' , snapshot1 => {
	  username.text = snapshot1.val().username;
	});
	database.ref('users/' + userkey + '/post/').once('value', snapshot2 => {
	  postDesc.text = snapshot2.val().description;
	  postTime.text = snapshot2.val().timestamp;
	});
    //Load all previous comments and if anyone adds a new comments, create new element for newest comment
    database.ref('users/' + userkey + '/postComments/').on('child_added', function(snapshot3, prevChild) {
      //database.ref('users/' + userkey + '/postComments' + '/m' + (snapshot3.val() - 1) + '/').once('value', function(snapshot4) {
	    const newA = document.createElement('a');
	    const li = document.createElement('li');
	    newA.innerText = snapshot3.val().user + ': ' + snapshot3.val().message;
        li.appendChild(newA);
	    commentList.appendChild(li);
      //});
    });
  }
    
  function addComment(msg) {
    console.log("Selected post key: " + sessionStorage.postSelect);

	if(sessionStorage.postSelect != undefined) {
    //Get the nextM value of selected post
    database.ref('users/' + sessionStorage.postSelect + '/nextM' ).once('value', snapshot1 => {
	  //Get username information from current logged in user
	  database.ref('users/' + sessionStorage.user + '/').once('value', snapshot2 => {
	    //Create mX, where X = valueOf(nextM)
	    database.ref('users/' + sessionStorage.postSelect + '/postComments' + '/m' + snapshot1.val()).set({
	      user: snapshot2.val().username,
		  message: msg
	    });
	  });

	  //Increment nextM
	  database.ref('users/' + sessionStorage.postSelect + '/').update({
	    nextM: snapshot1.val() + 1
	  });
	});
	//Clear comment field
	inText.value = "";
	}
	else {
	  alert("Error: Select a post first to add a comment.");
	}
  }


	var name = 'xx';

	function getName(emojiPic) {
		name = emojiPic;
	}

function toggle() {
    var x = document.getElementsByClassName("myDIV");


    for(var i = 0; i<x.length; i++){

      if (x[i].style.display === 'none') {

          x[i].style.display = 'block';
      } 
      else {
          x[i].style.display = 'none';
      }
    }
}
  function createPost() {
    var currentTime = moment().calendar();
	database.ref('users/' + sessionStorage.user +'/post/').once('value', function(snapshot1) {
	  console.log(snapshot1);
	  if(snapshot1.exists() != false) {
	    var choice = confirm("Warning! Creating a new post will overwrite your existing post. Proceed?");
		if(choice == true) {
		  if (navigator.geolocation) {
		    navigator.geolocation.getCurrentPosition(function(position) {

            //Setup comments for this post
	        database.ref('users/' + sessionStorage.user + '/').update({
	          nextM: 1
	        });
			database.ref('users/' + sessionStorage.user + '/postComments').set({
			});

            database.ref('users/' + sessionStorage.user + '/post').set({
		      image: name,
		      description: $("#found-description").val(),
		      latitude: position.coords.latitude,
		      longitude: position.coords.longitude,
		      timestamp: currentTime
            });
	        alert("Post Created!");
	        window.location.href="/";
	      }, function() {
	        alert("Error: Post Not Created");
		    window.location.href="/";
            handleLocationError(true, infoWindow, map.getCenter());
          });
          } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
          }
		}
	  }
	  else {
	    if (navigator.geolocation) {
		  navigator.geolocation.getCurrentPosition(function(position) {

          //Setup comments for this post
	      database.ref('users/' + sessionStorage.user + '/').update({
	        nextM: 1
	      });

          database.ref('users/' + sessionStorage.user + '/post').set({
		    image: name,
		    description: $("#found-description").val(),
		    latitude: position.coords.latitude,
		    longitude: position.coords.longitude,
		    timestamp: currentTime
          });
	      alert("Post Created!");
	      window.location.href="/";
	      }, function() {
	        alert("Error: Post Not Created");
		    window.location.href="/";
            handleLocationError(true, infoWindow, map.getCenter());
          });
          } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
          } 
	  }
	});
  }

	//Display all posts on the map on Page Load (static; will not change in real time)
	database.ref('users/').once('value', function(snap) {
	  snap.forEach(function(childsnap1) {
	    if(childsnap1.val().post != null) {
		  database.ref('users/' + childsnap1.key + '/post').once('value', function(childsnap2) {
		    var marker = new google.maps.Marker({
		      position: new google.maps.LatLng(childsnap2.val().latitude, childsnap2.val().longitude),
		   	  icon: 'icons/' + childsnap2.val().image + '.png',
		      map: map
		    });
			var infoWin = new google.maps.InfoWindow({
			    content: '<div class="dHeader">' + childsnap1.val().username + '</div>' +
				         '<div class="description">"' + childsnap2.val().description + '"</div>' +
				         '<br><center><button class="profileBut" onclick="toggle()"><i class="fa fa-users fa-3x"></i></button><div class="myDIV" style="display:none">  Occupation: Student <br> Hobbies: Soccer, Art</div>|<i class="fa fa-phone fa-3x"></i>|<a href="javascript:postComments(\'' + childsnap1.key + '\')"><i class="fa fa-comments fa-3x"></i></a></center>' +
					     '<a>'+ childsnap2.val().timestamp +'</a>'
		      });
		   	  marker.addListener('click', function() {
		        infoWin.open(map, marker);
			  });
		  });
		}
	  });
	});

  	function postEmoji() {
        var name, description;
        if ((description = $("#found-description").val()) == "") {
            alert("Please add a description.");
        }
		else {
		  createPost();
        }
    }

	var map, infoWindow;
    function initMap() {
	  $("#map-loading").fadeOut();

      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 32.87699, lng: -117.2365},
		zoom: 16
    });
	infoWindow = new google.maps.InfoWindow({content:'<p class="hook">I Am Here</p>'});
    // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

			//Create marker for self location
            var marker = new google.maps.Marker({
              position: pos,
              map: map,
			  icon: {
			    path: google.maps.SymbolPath.CIRCLE,
				scale: 10
			   }
            });

            infoWindow.setPosition(pos);
            infoWindow.open(map);
            map.setCenter(pos);

          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
      }

	  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
	    infoWindow.setPosition(pos);
		infoWindow.setContent(browserHasGeolocation ?
		                      'Error: The Geolocation service failed.' :
							  'Error: Your browser doesn\'t support geolocation.');
		infoWindow.open(map);
	  }
     
  </script>
  <script src="js/index.js"></script>
  <script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAW3DCA-XeamOExWb8IlYw0YZnre1UvZww&callback=initMap">
  </script>
  <script src="https://cdn.firebase.com/js/client/2.2.3/firebase.js"></script>
</body>
</html>
